import{j as e}from"./iframe-DncksSc9.js";import{useMDXComponents as r}from"./index-DHwy2cP9.js";import{I as n,F as a}from"./CommandsAndQueries-CDnFth_H.js";import{M as s,C as m}from"./blocks-CrR4TToZ.js";import"./Tag-CydY6GNK.js";import{M as p}from"./index-Bxx2fk60.js";import"./copy-DLEpwWX6.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-onwCzFR9.js";import"./preload-helper-PPVm8Dsz.js";import"./index--l4k2_pu.js";import"./index-LgvpS8l8.js";import"./index-DM-1F5s9.js";import"./Link-DA9rizI6.js";import"./index-DjMKVIn1.js";import"./index-9yiQ979H.js";import"./index-ozB3DgLW.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-D0ZXAWvt.js";import"./addCustomCSSWithScoping-CHaIArZr.js";import"./index-Bbgh-_Am.js";import"./information-DaRpWkOX.js";import"./sys-enter-2-oWYvZ3n3.js";import"./alert-DDv07Q-F.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-CtelhZjf.js";import"./delete-C8B1Co0i.js";import"./settings-B4D9jFyf.js";import"./NoData-0pXCNlwj.js";import"./IllustratedMessage-Biu-Y2PO.js";import"./i18n-defaults-BS8OTJAB.js";import"./parameters-bundle.css-MDhRcvbE.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-DLX-UAid.js";import"./index-Cl9Lgdz7.js";import"./slim-arrow-down-Dw4qZkUc.js";import"./Input-HjE4MzLi.js";import"./ResponsivePopoverCommon.css-D7l99RH0.js";import"./ValueStateMessage.css-CDVm0-OH.js";import"./Suggestions.css-Di4bJ4Mv.js";import"./ListBoxItemGroupTemplate-BwHMeEo2.js";import"./ComboBoxItemGroup-CoTRrzsz.js";import"./ListItemBaseTemplate-DgydtAbW.js";import"./Token-Cmmtifzz.js";import"./ScrollEnablement-P--ZLWUn.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-OppmVys6.js";import"./ToggleButton-DKYgle8i.js";import"./SuggestionItem-DgjKJ3SY.js";import"./index-DeJkkzWj.js";import"./Option-DDPjWDk1.js";import"./index-JrTo95Fm.js";import"./SegmentedButton-CLC_XxdM.js";import"./index-B_8t13HI.js";import"./Select-D1ki5xZv.js";import"./InvisibleMessage-B0PSwWLP.js";import"./slim-arrow-down-BB45oQEO.js";import"./index-83abA5iC.js";import"./IconDesign-DXd8PPVF.js";import"./filter-DaZDbBT4.js";import"./group-2-B5P3PhAn.js";import"./sort-descending-VXAY9Zz-.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-B70SChhh.js";import"./utils-Qp_0Ohai.js";import"./index-CKQ5y9RK.js";import"./index-DcM8rOK1.js";import"./index-Bn_XXlzK.js";import"./navigation-down-arrow-DE2B6sGV.js";import"./navigation-right-arrow-zAMyMa8Q.js";import"./navigation-right-arrow-CzaD2I1v.js";import"./useCurrentTheme-DwePz3I6.js";import"./IndicationColor-DVw-fSM_.js";import"./index-D-zrcSGE.js";import"./debounce-D7W5PopO.js";import"./useIsRTL-SpXXo_HP.js";import"./paper-plane-CXqmWy3W.js";import"./index-CIKjtRh_.js";import"./less-CeDgCnwC.js";import"./index-CqDygOHO.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function _e(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{_e as default};
