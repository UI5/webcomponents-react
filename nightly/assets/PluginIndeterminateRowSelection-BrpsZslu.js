import{j as e}from"./iframe-43wlDzrj.js";import{useMDXComponents as r}from"./index-XbeLC3PN.js";import{I as n,F as a}from"./CommandsAndQueries-BVePbTmS.js";import{M as s,C as m}from"./blocks-VCr_TDgJ.js";import"./Tag-DvuRdu_J.js";import{M as p}from"./index-D_51MvSW.js";import"./copy-CHCJaVsW.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-D10oF3Zp.js";import"./preload-helper-PPVm8Dsz.js";import"./index-CeIthXDN.js";import"./index-NATKJxhC.js";import"./index-CYHyRuCO.js";import"./Link-N85W-l5g.js";import"./addCustomCSSWithScoping-iHDWQtL_.js";import"./index-DHTRveDi.js";import"./index-C_V3uMP5.js";import"./index-Cx3qav0q.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-D888T4vP.js";import"./index-CNoVY_XQ.js";import"./information-CaFqdV1q.js";import"./sys-enter-2-C8G6jLKW.js";import"./alert-Id5Wcp3M.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-DGgp7AI6.js";import"./delete-CGKk-GHt.js";import"./settings-azhe1KGA.js";import"./NoData-BUEDhyou.js";import"./IllustratedMessage-DI5ozM4h.js";import"./i18n-defaults-BS8OTJAB.js";import"./parameters-bundle.css-MDhRcvbE.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-B47dMSPk.js";import"./index-DLDDGmPM.js";import"./slim-arrow-down-C0QargdW.js";import"./Input-BgaYHg51.js";import"./ResponsivePopoverCommon.css-CvwmGqLs.js";import"./ValueStateMessage.css-BHLQ2DbP.js";import"./Suggestions.css-BTUxUlaU.js";import"./ListBoxItemGroupTemplate-_jq9N5mv.js";import"./ComboBoxItemGroup-BnIMpk3_.js";import"./ListItemBaseTemplate-BNZLQVJb.js";import"./Token-DoODEqch.js";import"./ScrollEnablement-Cm1ZvOJx.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-C1ufjNVS.js";import"./ToggleButton-DZrdfmOA.js";import"./SuggestionItem-5jEGmJUe.js";import"./index-D_dLm55z.js";import"./Option-CJ58wD00.js";import"./index-wy3OMWOb.js";import"./SegmentedButton-B-jkLKht.js";import"./index-t8OF5k03.js";import"./Select-BntRU9MY.js";import"./InvisibleMessage-CWwBH76X.js";import"./slim-arrow-down-CeCiJzmU.js";import"./useIsRTL-DZbwhoX7.js";import"./index-BzUhYjna.js";import"./IconDesign-DXd8PPVF.js";import"./filter-CBaC_AY2.js";import"./group-2-BtuK6gfj.js";import"./sort-descending-upcXrfhH.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-Ds45T-GS.js";import"./utils-BQmyXk_Q.js";import"./index-DI_L1vtw.js";import"./index-BVV-gDdT.js";import"./index-C73gXked.js";import"./navigation-down-arrow-CE61iwfG.js";import"./navigation-right-arrow-Dd3smTto.js";import"./navigation-right-arrow-WYE_8Vwt.js";import"./useCurrentTheme-B63DugkT.js";import"./IndicationColor-DVw-fSM_.js";import"./index-cIZdWKhJ.js";import"./debounce-D7W5PopO.js";import"./paper-plane-xHzyfFIj.js";import"./index-Cz9Roaqc.js";import"./less-D_D0iQDA.js";import"./index-Cb6A3wNx.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function _e(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{_e as default};
