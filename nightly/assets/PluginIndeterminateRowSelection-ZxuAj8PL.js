import{j as e}from"./iframe-BB4qEXD6.js";import{useMDXComponents as r}from"./index-Du8_Rn8P.js";import{I as n,F as a}from"./CommandsAndQueries-DRsaMJRB.js";import{M as s,C as m}from"./blocks-CR8KOJrJ.js";import"./Tag-Da7QnCDv.js";import{M as p}from"./index-DdTPxxL_.js";import"./copy-BVMnHcDg.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-BeJL7Ye6.js";import"./preload-helper-PPVm8Dsz.js";import"./index-x2cXHq8y.js";import"./index-9Py2403r.js";import"./index-CsmFqYDM.js";import"./Link-BYUEfY7R.js";import"./index-Dt_2dhRA.js";import"./index-DMHUWYeC.js";import"./index-CztWxO-c.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-Bzv1Zaa7.js";import"./addCustomCSSWithScoping-Cbj-6aXb.js";import"./index-Dpli1QB-.js";import"./information-Y0x5W-OX.js";import"./sys-enter-2-BJKr7qQ1.js";import"./alert-BQZZbhbR.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-erJBQNRZ.js";import"./delete-D5Bux8E7.js";import"./settings-BB1PJ6vP.js";import"./NoData-BAy4r6V2.js";import"./IllustratedMessage-Cp617NHY.js";import"./i18n-defaults-DGnw9SAb.js";import"./parameters-bundle.css-DHbieIhm.js";import"./NoFilterResults-BPmeBzvN.js";import"./index-CA-cd2np.js";import"./index-AswMmsDf.js";import"./slim-arrow-down-BddUJ-KN.js";import"./Input-DkXdapB6.js";import"./ResponsivePopoverCommon.css-Dw9E0nMz.js";import"./ValueStateMessage.css-BkhABoMh.js";import"./Suggestions.css-BC1EOLh5.js";import"./ListBoxItemGroupTemplate-HpSvs65o.js";import"./ComboBoxItemGroup-CCrdSIbE.js";import"./ListItemBaseTemplate-CAROCz5m.js";import"./Token-DoaTlhno.js";import"./ScrollEnablement-BU_OfE9O.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-CI0I5uqQ.js";import"./ToggleButton-BdNP-MBf.js";import"./SuggestionItem-DeZkVwUY.js";import"./index-CmahwXl7.js";import"./Option-BGTVK_my.js";import"./index-9-V0BX8k.js";import"./SegmentedButton-BuoqzDHW.js";import"./index-_XZyBcjC.js";import"./Select-LlNkV-fW.js";import"./InvisibleMessage-DyYsNy9h.js";import"./slim-arrow-down-BARLwaMW.js";import"./index-BK2SG_SP.js";import"./index-9GnEvteS.js";import"./index-OBDc_NcL.js";import"./IconDesign-DXd8PPVF.js";import"./filter-DsHNEEGx.js";import"./group-2-CrLwAnmS.js";import"./sort-descending-0WZUg8PX.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-1qNsr_an.js";import"./utils-BdVBr4pQ.js";import"./index-DIzDIuZy.js";import"./index-BRJ-40Zh.js";import"./index-DB-fTerp.js";import"./navigation-down-arrow-VkG8_yjV.js";import"./navigation-right-arrow-HRIp1p54.js";import"./navigation-right-arrow-T0LxulNL.js";import"./useCurrentTheme-D6vYZD-2.js";import"./IndicationColor-DVw-fSM_.js";import"./index-C2hZK3d5.js";import"./debounce-D7W5PopO.js";import"./useIsRTL-Cj10AoIb.js";import"./paper-plane-BYFBOW_O.js";import"./index-DMqgnaw_.js";import"./less-B1wulFXz.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function Be(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{Be as default};
