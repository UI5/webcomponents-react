import{j as e}from"./iframe-CTc_pUME.js";import{useMDXComponents as r}from"./index-CbFOQhGC.js";import{I as n,F as a}from"./CommandsAndQueries-BKl-Lehx.js";import{M as s,C as m}from"./blocks-Bdab0qOx.js";import"./Tag-BJVcJF8V.js";import{M as p}from"./index-BmIFgcgy.js";import"./copy-CX-UstQv.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-KHHhuFbE.js";import"./preload-helper-PPVm8Dsz.js";import"./index-Z8jBBqBa.js";import"./index-C61H3I4w.js";import"./index-cPYEFV1s.js";import"./Link-CIXpUy3N.js";import"./index-dZVrSoBW.js";import"./index-MjXDOENA.js";import"./index-CHi_LEvO.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-B7yiJaHj.js";import"./addCustomCSSWithScoping-Dc_j6Yzk.js";import"./index-6ELyezq3.js";import"./information-BUnhqMn4.js";import"./sys-enter-2-DOV5JEOM.js";import"./alert-DylNOMF0.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-CIKwfdQg.js";import"./delete-kbtfU-Be.js";import"./settings-BLPPWMrz.js";import"./NoData-5paOsqOO.js";import"./IllustratedMessage-Ds6OazXP.js";import"./i18n-defaults-BS8OTJAB.js";import"./parameters-bundle.css-MDhRcvbE.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-BcphOOS6.js";import"./index-Cz9iPqTS.js";import"./slim-arrow-down-C939bzhs.js";import"./Input-DwKwevQu.js";import"./ResponsivePopoverCommon.css-DVODeCs6.js";import"./ValueStateMessage.css-CEEhjmep.js";import"./Suggestions.css-D-Gi3AK0.js";import"./ListBoxItemGroupTemplate-DvohLQqN.js";import"./ComboBoxItemGroup-Dp8wVEki.js";import"./ListItemBaseTemplate-Flt8m4GL.js";import"./Token-B0g-cX5V.js";import"./ScrollEnablement-Dqoexmfr.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-C3YrrMZt.js";import"./ToggleButton-gg5kcSkt.js";import"./SuggestionItem-D0rTiphA.js";import"./index-Blj39MLR.js";import"./Option-CsGmFVxt.js";import"./index-DCTt8g0K.js";import"./SegmentedButton-BADV9MET.js";import"./index-CurbkiN8.js";import"./Select-5ZecXlmx.js";import"./InvisibleMessage-sw3UNfwB.js";import"./slim-arrow-down-B_qgXS-y.js";import"./index-CP2pU2KW.js";import"./IconDesign-DXd8PPVF.js";import"./filter-BLV8HYZD.js";import"./group-2-CcIeK99E.js";import"./sort-descending-D80ou1nO.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-BgNFH_bM.js";import"./utils-DAL9-AHg.js";import"./index-Brew3N2g.js";import"./index-9vQVNdmd.js";import"./index-6fpphJyg.js";import"./navigation-down-arrow-TIAFyztM.js";import"./navigation-right-arrow-BigkpvCQ.js";import"./navigation-right-arrow-B100tUdc.js";import"./useCurrentTheme-D2CPEB2n.js";import"./IndicationColor-DVw-fSM_.js";import"./index-DLD--ZCq.js";import"./debounce-D7W5PopO.js";import"./useIsRTL-BmQn44KR.js";import"./paper-plane-DZOaRTqB.js";import"./index-kRlvFPPJ.js";import"./less-Bbv1vYfG.js";import"./index-rhUIVPqF.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function _e(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{_e as default};
