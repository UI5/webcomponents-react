import{j as e}from"./iframe-CSbQr9Kh.js";import{useMDXComponents as r}from"./index-Bm__WzDY.js";import{I as n,F as a}from"./CommandsAndQueries-BBfDJted.js";import{M as s,C as m}from"./blocks-TfJF1wSB.js";import"./Tag-A7CWsIQR.js";import{M as p}from"./index-cCDc2RK7.js";import"./copy-CIEB0M7W.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-DSsuzZnr.js";import"./preload-helper-PPVm8Dsz.js";import"./index-CqhcpXS6.js";import"./index-HYYwxuYt.js";import"./index-DOzwAkgD.js";import"./Link-Cjj3vJ0R.js";import"./index-B6cEeVTY.js";import"./index-CnvIjGJy.js";import"./index-BC5Egg9m.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-CbQfKOeW.js";import"./addCustomCSSWithScoping-D9vmwUKM.js";import"./index-D2CGZc8Q.js";import"./information-DqQUPKzo.js";import"./sys-enter-2-BXqUXr7U.js";import"./alert-CG5QiRAo.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-nDPSzVIl.js";import"./delete-BJacbrPT.js";import"./settings-AWsPUNGG.js";import"./NoData-Be4XzJOz.js";import"./IllustratedMessage-DYcCQrXb.js";import"./i18n-defaults-DGnw9SAb.js";import"./parameters-bundle.css-DHbieIhm.js";import"./NoFilterResults-oFDVAAPo.js";import"./index-DBsJuuDB.js";import"./index-gLPF6SWi.js";import"./slim-arrow-down-DxVwfy5r.js";import"./Input-CDRJXkCD.js";import"./ResponsivePopoverCommon.css-CX_5uYsf.js";import"./ValueStateMessage.css--pnBJkXc.js";import"./Suggestions.css-BU_P2C6y.js";import"./ListBoxItemGroupTemplate-DSBmxLfg.js";import"./ComboBoxItemGroup-DXvJ7bIP.js";import"./ListItemBaseTemplate-DsQq_j4Z.js";import"./Token-CJJk4a0-.js";import"./ScrollEnablement-DpkPz9em.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-Ck6WotIf.js";import"./ToggleButton-DHGAaV5Z.js";import"./SuggestionItem-EYr04vfH.js";import"./index-DsWUYnd2.js";import"./Option-SezZz24A.js";import"./index-DqXpBA3m.js";import"./SegmentedButton-B1ja-BgV.js";import"./index-XxV9_aNw.js";import"./Select-CyU6KfcW.js";import"./InvisibleMessage-DEubzVGS.js";import"./slim-arrow-down-D9grr6Uu.js";import"./index-SNU-XIU1.js";import"./index-lwm1gao-.js";import"./index-CNy7gkcO.js";import"./IconDesign-DXd8PPVF.js";import"./filter-VA_uH9v7.js";import"./group-2-YpekFQLH.js";import"./sort-descending-DFI-P2gY.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-DQ6xEtJo.js";import"./utils-CH7XdL15.js";import"./index-DJxbqdeK.js";import"./index-Chl98GIc.js";import"./index-CWMloBdV.js";import"./navigation-down-arrow-BshNj7dt.js";import"./navigation-right-arrow-CyYVo4V2.js";import"./navigation-right-arrow-B-U5Q9E4.js";import"./useCurrentTheme-Bhk6HLgU.js";import"./IndicationColor-DVw-fSM_.js";import"./index-Dayvn7j6.js";import"./debounce-D7W5PopO.js";import"./useIsRTL-C53Cl9QB.js";import"./paper-plane-CnJUsrSx.js";import"./index-COarheIH.js";import"./less-CD0L_VR0.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function Be(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{Be as default};
