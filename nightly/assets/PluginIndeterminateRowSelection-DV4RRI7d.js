import{j as e}from"./iframe-D3k-2Qmx.js";import{useMDXComponents as r}from"./index-BSBCExsS.js";import{I as n,F as a}from"./CommandsAndQueries-DsxWaHqI.js";import{M as s,C as m}from"./blocks-bv8Dsnai.js";import"./Tag-9PM7-eum.js";import{M as p}from"./index-By3VOOwb.js";import"./copy-Ba7LzWJS.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-DoVxZ5W5.js";import"./preload-helper-PPVm8Dsz.js";import"./index-B4561E-8.js";import"./index-7likbAae.js";import"./index-CU7B0Jzs.js";import"./Link-CTDi8zx_.js";import"./index-CcT0HfRf.js";import"./index-ne93MLaG.js";import"./index-DsyKOjMu.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-CVKdFd1t.js";import"./addCustomCSSWithScoping-BuaXJWbP.js";import"./index-aLtq1xU9.js";import"./information-Bs4ke0_q.js";import"./sys-enter-2-C1RuQ14F.js";import"./alert-CgXiLrEU.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-BC6U5u3W.js";import"./delete-DI_qDlFN.js";import"./settings-BvcEZPoD.js";import"./NoData-Xwr-RknH.js";import"./IllustratedMessage-z_u2-Wjs.js";import"./i18n-defaults-BS8OTJAB.js";import"./parameters-bundle.css-MDhRcvbE.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-AWIJ1fgK.js";import"./index-BB7_GtGd.js";import"./slim-arrow-down-DdlDKMGS.js";import"./Input-D_MVNcCW.js";import"./ResponsivePopoverCommon.css-BeJmjNzs.js";import"./ValueStateMessage.css-C-m_QvzY.js";import"./Suggestions.css-B6Gqc3Wb.js";import"./ListBoxItemGroupTemplate-XWF1A1vE.js";import"./ComboBoxItemGroup-DAQ1yURi.js";import"./ListItemBaseTemplate-DTj5CQF7.js";import"./Token-BVZhclFZ.js";import"./ScrollEnablement-BHiM0fB_.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-CIk7Var7.js";import"./ToggleButton-DRVTplqo.js";import"./SuggestionItem-C3X18_wI.js";import"./index-D_jUBjPN.js";import"./Option-5IxyV4uz.js";import"./index-Cn9shEoP.js";import"./SegmentedButton-hBWk1uUq.js";import"./index-Dk_2UEN6.js";import"./Select-CqXEAITh.js";import"./InvisibleMessage-DVDXe7QT.js";import"./slim-arrow-down-BNqq3rWg.js";import"./index-D-6NCyp_.js";import"./IconDesign-DXd8PPVF.js";import"./filter-D2gwwH7C.js";import"./group-2-Bzk8mn-l.js";import"./sort-descending-Cy8CjEGu.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-BVgvonRF.js";import"./utils-BL7e06bc.js";import"./index-CKPOSyqX.js";import"./index-CSijjXyi.js";import"./index-szqBFdUN.js";import"./navigation-down-arrow-CqNaGyR0.js";import"./navigation-right-arrow-xbKna6K1.js";import"./navigation-right-arrow-CjkeGwpU.js";import"./useCurrentTheme-DFJPgjga.js";import"./IndicationColor-DVw-fSM_.js";import"./index-Dc1w_8Z2.js";import"./debounce-D7W5PopO.js";import"./useIsRTL-BCYIk2li.js";import"./paper-plane-DWYsfwqu.js";import"./index-nr0VQw8N.js";import"./less-Cql1i3bl.js";import"./index-Cddzo8hT.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function _e(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{_e as default};
