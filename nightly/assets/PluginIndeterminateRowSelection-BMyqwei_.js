import{j as e}from"./iframe-BiMlSvB5.js";import{useMDXComponents as r}from"./index-zjeO5ftS.js";import{I as n,F as a}from"./CommandsAndQueries-Ihy_vY5j.js";import{M as s,C as m}from"./blocks-JfRoz7Bu.js";import"./Tag-DcGxJxNj.js";import{M as p}from"./index-DdnnKwEp.js";import"./copy-CpLwtFwa.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-CrJDfv5d.js";import"./preload-helper-PPVm8Dsz.js";import"./index-DJoGcUHO.js";import"./index-CjwASx83.js";import"./index-COwkRR6t.js";import"./Link-hDp19ErW.js";import"./index-BN_7wmc1.js";import"./index-BTBLl-af.js";import"./index-CvgLLP4J.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-g_QfzUS9.js";import"./addCustomCSSWithScoping-Dxx39OMa.js";import"./index-CJR1a3iJ.js";import"./information-B40Y1iPW.js";import"./sys-enter-2-CkPUHPx-.js";import"./alert-BwKvOFsR.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-lkroZnbL.js";import"./delete-FMGJKKZJ.js";import"./settings-C3vBunPl.js";import"./NoData-BDVuJ86f.js";import"./IllustratedMessage-CdkkLDXG.js";import"./i18n-defaults-DGnw9SAb.js";import"./parameters-bundle.css-DHbieIhm.js";import"./NoFilterResults-CyCSkyGX.js";import"./index-CzIuiFxY.js";import"./index-uzhwBdxV.js";import"./slim-arrow-down-DhQmyJSw.js";import"./Input-5MKIWbcv.js";import"./ResponsivePopoverCommon.css-Gn55K0IR.js";import"./ValueStateMessage.css-C63o8ajt.js";import"./Suggestions.css-bWFEPpLk.js";import"./ListBoxItemGroupTemplate-P2pMYzMz.js";import"./ComboBoxItemGroup-DGvjryay.js";import"./ListItemBaseTemplate-DFyALYeN.js";import"./Token-DP7V52GY.js";import"./ScrollEnablement-DKyX1hlv.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-CteCbUEH.js";import"./ToggleButton-CnxXmbLH.js";import"./SuggestionItem-BdwWLvfq.js";import"./index-CyQT3WP0.js";import"./Option-C9Uo7sgL.js";import"./index-D_l_aaej.js";import"./SegmentedButton-CmS3epsf.js";import"./index-TyCpnseE.js";import"./Select-DV8FGlWC.js";import"./InvisibleMessage-CdGbv0CP.js";import"./slim-arrow-down-CVQHENDk.js";import"./index-B-Yh5T4c.js";import"./index-CIW_ic5S.js";import"./index-GmFx-3lk.js";import"./IconDesign-DXd8PPVF.js";import"./filter-BS_XAjEs.js";import"./group-2-BQ8I3Xw3.js";import"./sort-descending-Dn3aviOX.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-_j2qh61z.js";import"./utils-CE3pjW5h.js";import"./index-BgWRU9Z5.js";import"./index-CjF_Wh_0.js";import"./index-C0ceKoHV.js";import"./navigation-down-arrow-m9enBW2g.js";import"./navigation-right-arrow-C4IxskPN.js";import"./navigation-right-arrow-CeFlz50Q.js";import"./useCurrentTheme-CdJ3Wj-s.js";import"./IndicationColor-DVw-fSM_.js";import"./index-D9Agz_AG.js";import"./debounce-D7W5PopO.js";import"./useIsRTL-B8WBSrx9.js";import"./paper-plane-CJosRD6f.js";import"./index-BonsQVcP.js";import"./less-lHySVG5z.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function Be(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{Be as default};
