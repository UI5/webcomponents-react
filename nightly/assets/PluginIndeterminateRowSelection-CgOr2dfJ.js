import{j as e}from"./iframe-BELPVtw8.js";import{useMDXComponents as r}from"./index-Ccx4gwdG.js";import{I as n,F as a}from"./CommandsAndQueries-B86vB0yc.js";import{M as s,C as m}from"./blocks-B3lwtuZn.js";import"./Tag-jS7irC1t.js";import{M as p}from"./index-BkR2pL75.js";import"./copy-BGZyCQeI.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-BuGimn8e.js";import"./preload-helper-PPVm8Dsz.js";import"./index-CQYUcCHI.js";import"./index-DslTuBZD.js";import"./index-Dy8TXCJ0.js";import"./Link-BLMqdfPm.js";import"./index-nk7PQCW4.js";import"./index-D2dH4dam.js";import"./index-D2H4sMz3.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-GIAd7WMY.js";import"./addCustomCSSWithScoping-vktTBWHy.js";import"./index-C1fkktKB.js";import"./information-Q0D1EyOn.js";import"./sys-enter-2-CB1NZnv4.js";import"./alert-e0Pm7FCS.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-BqiIa7eZ.js";import"./delete-DHGmX5w5.js";import"./settings-CEc6JgR1.js";import"./NoData-DvTHfRil.js";import"./IllustratedMessage-78L0W6rp.js";import"./i18n-defaults-BS8OTJAB.js";import"./parameters-bundle.css-MDhRcvbE.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-BXIPIfZx.js";import"./index-DFsb20bI.js";import"./slim-arrow-down-CwiRy3M0.js";import"./Input-B-A8a0OL.js";import"./ResponsivePopoverCommon.css-BWZcb2bV.js";import"./ValueStateMessage.css-SXuctyRx.js";import"./Suggestions.css-C9vA098l.js";import"./ListBoxItemGroupTemplate-COysa2md.js";import"./ComboBoxItemGroup-CkDVZmGn.js";import"./ListItemBaseTemplate-bJafeYos.js";import"./Token-CC2z-1Eu.js";import"./ScrollEnablement-7itX-dGY.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-CE1p650D.js";import"./ToggleButton-BX9cFRFF.js";import"./SuggestionItem-D9DO9uWA.js";import"./index-BK4KP33l.js";import"./Option-C6iyQjxn.js";import"./index-uAC978GR.js";import"./SegmentedButton-B1O-glM5.js";import"./index-BVils4tE.js";import"./Select-DRUUnZi2.js";import"./InvisibleMessage-DFHR3png.js";import"./slim-arrow-down-BFVaKqjv.js";import"./index-Dj10-OWx.js";import"./IconDesign-DXd8PPVF.js";import"./filter-S556KB4S.js";import"./group-2-_GSc8Amx.js";import"./sort-descending-xALRtyQE.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-fM3yxWKm.js";import"./utils-DkiPjs68.js";import"./index-C00swXDA.js";import"./index-SUxQZfJ3.js";import"./index-T_E5hJOY.js";import"./navigation-down-arrow-BKIRwexC.js";import"./navigation-right-arrow-B8ETkxoi.js";import"./navigation-right-arrow-k3A4e-XZ.js";import"./useCurrentTheme-aIfWcmJ3.js";import"./IndicationColor-DVw-fSM_.js";import"./index-BL1iCeSt.js";import"./debounce-D7W5PopO.js";import"./useIsRTL-kNFhRDgm.js";import"./paper-plane-CzSfUHba.js";import"./index-36Nf5wB9.js";import"./less-3oBkjuBq.js";import"./index-CvNAEadG.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function _e(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{_e as default};
