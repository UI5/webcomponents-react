import{j as e}from"./iframe-DHodyxHg.js";import{useMDXComponents as r}from"./index-BN78HojQ.js";import{I as n,F as a}from"./CommandsAndQueries-BJoNcE_T.js";import{M as s,C as m}from"./blocks-DRbngUD5.js";import"./Tag-AoT1Wzdr.js";import{M as p}from"./index-C_UZWXPq.js";import"./copy-HtbMTlWB.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-CjRnrZ5o.js";import"./preload-helper-PPVm8Dsz.js";import"./index-LizrXBCk.js";import"./index-H_vNaU3m.js";import"./index-CzYnO6dI.js";import"./Link-DVjUQMmu.js";import"./index-8C_wghAv.js";import"./index-CuoqTBPK.js";import"./index-Bf66SqZa.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-D26g_6Hi.js";import"./addCustomCSSWithScoping-BBYARKEG.js";import"./index-Cbt6pGSR.js";import"./information-CikfZyec.js";import"./sys-enter-2-CGw1AdWq.js";import"./alert-fS8iZOwW.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-Tg2_K8Hr.js";import"./delete-Zcb2vEJ9.js";import"./settings-BD-RgLuV.js";import"./NoData-ZyVsLGlx.js";import"./IllustratedMessage-DWYc-Nj8.js";import"./i18n-defaults-BS8OTJAB.js";import"./parameters-bundle.css-MDhRcvbE.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-C-nNTrYT.js";import"./index-B9OIuk5u.js";import"./slim-arrow-down-RUw4_20M.js";import"./Input-CPLuf8pl.js";import"./ResponsivePopoverCommon.css-acGEx8eA.js";import"./ValueStateMessage.css-DdKqUqjJ.js";import"./Suggestions.css-B9GwOVjc.js";import"./ListBoxItemGroupTemplate-DbSMHwWh.js";import"./ComboBoxItemGroup-BpKRweKF.js";import"./ListItemBaseTemplate-DgUnC3lw.js";import"./Token-CbMshDZu.js";import"./ScrollEnablement-QqZ8MTp1.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-ob80DdRY.js";import"./ToggleButton-BKWW76vP.js";import"./SuggestionItem-C9bc-o4q.js";import"./index-S-wdO51Z.js";import"./Option-Dgeh_gWY.js";import"./index-BtsPFHyJ.js";import"./SegmentedButton-Dgc_oaRw.js";import"./index-B1iSRk56.js";import"./Select-DZKbaPCr.js";import"./InvisibleMessage-k0Gva9XM.js";import"./slim-arrow-down-cqA_BTp3.js";import"./index-Bq3O3R5l.js";import"./index-H_BorQOy.js";import"./IconDesign-DXd8PPVF.js";import"./filter-CYwltf-g.js";import"./group-2-C2sMZn1f.js";import"./sort-descending-DrgkNws6.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-Bo9NW1qj.js";import"./utils-BwVDplvj.js";import"./index-ja_VFHYZ.js";import"./index-BzHA07QR.js";import"./index-V-s4kElR.js";import"./navigation-down-arrow-BKyAuWCW.js";import"./navigation-right-arrow-DRM4c8S8.js";import"./navigation-right-arrow-DbKnsnOZ.js";import"./useCurrentTheme-CxvZJkfq.js";import"./IndicationColor-DVw-fSM_.js";import"./index-BUmA-QY0.js";import"./debounce-D7W5PopO.js";import"./useIsRTL-D2F7gVSb.js";import"./paper-plane-UC5z0UMH.js";import"./index-DRtfFjjT.js";import"./less-D8BZSXoC.js";import"./index-CurBf1wH.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function ze(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{ze as default};
