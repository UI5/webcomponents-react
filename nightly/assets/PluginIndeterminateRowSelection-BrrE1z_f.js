import{j as e}from"./iframe-DBihyX6B.js";import{useMDXComponents as r}from"./index-7EvsRGh_.js";import{I as n,F as a}from"./CommandsAndQueries-CFIgGEta.js";import{M as s,C as m}from"./blocks-4x6sD7LX.js";import"./Tag-DcWV-u9n.js";import{M as p}from"./index-DLEor5QI.js";import"./copy-Bf9mIKpj.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-CtylBLYb.js";import"./preload-helper-PPVm8Dsz.js";import"./index-Bht8mt-d.js";import"./index-BXD3v3ss.js";import"./index-tKXjFGfd.js";import"./Link-DylgBeIF.js";import"./addCustomCSSWithScoping-CH8klGw7.js";import"./index-HwCsdfjY.js";import"./index-BYBUQOBO.js";import"./index-CCW-kbw5.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-ZTIhRr7S.js";import"./index-d0ALq1QU.js";import"./information-5R3zdDEl.js";import"./sys-enter-2-DGkUJwI9.js";import"./alert-DQd1blb9.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-BX0skYPv.js";import"./delete-DsRezzSz.js";import"./settings-D8ApvCwK.js";import"./NoData-DJ6OgM6J.js";import"./IllustratedMessage-BKJHSB3f.js";import"./i18n-defaults-BS8OTJAB.js";import"./parameters-bundle.css-MDhRcvbE.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-CfMSskMz.js";import"./index-7dKgR_TP.js";import"./slim-arrow-down-I06sys84.js";import"./Input-DqlEAtbU.js";import"./ResponsivePopoverCommon.css-B4oI3h8B.js";import"./ValueStateMessage.css-Bl16JEdv.js";import"./Suggestions.css-HfDO3kbS.js";import"./ListBoxItemGroupTemplate-B_lc-IJo.js";import"./ComboBoxItemGroup-Cicxp6Dh.js";import"./ListItemBaseTemplate-BxUwYA2D.js";import"./Token-DDOzZdpj.js";import"./ScrollEnablement-DqE26vCK.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-lLD0mBZ9.js";import"./ToggleButton-BwluPjoK.js";import"./SuggestionItem-CAvBP0b3.js";import"./index-pqVhDtQo.js";import"./Option-CueS9-6_.js";import"./index-Bm5_dFpv.js";import"./SegmentedButton-BDTfR_EV.js";import"./index-CVUkzR7r.js";import"./Select-D-a_LaKc.js";import"./InvisibleMessage-C5i35pcX.js";import"./slim-arrow-down-CzguZyVL.js";import"./useIsRTL-CjbK0HRk.js";import"./index-fzBRU-3G.js";import"./IconDesign-DXd8PPVF.js";import"./filter-Mxr7aXyx.js";import"./group-2-Ch_CtqUP.js";import"./sort-descending-wLco-Wqm.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-B-keJto8.js";import"./utils-BMRbKUpN.js";import"./index-jkXxogzq.js";import"./index-BO-2Cayf.js";import"./index-CFigK24s.js";import"./navigation-down-arrow-B0A4GYRi.js";import"./navigation-right-arrow-DghbmXJJ.js";import"./navigation-right-arrow-CfUGm-OO.js";import"./useCurrentTheme-DTyBVBjr.js";import"./IndicationColor-DVw-fSM_.js";import"./index-Cq7nPF5O.js";import"./debounce-D7W5PopO.js";import"./paper-plane-DLPVgadY.js";import"./index-DxZ2QBIC.js";import"./less-B09o0oEH.js";import"./index-Bx1E4_BP.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function _e(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{_e as default};
