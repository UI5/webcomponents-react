import{j as e}from"./iframe-ByiiILXu.js";import{useMDXComponents as r}from"./index-DYpmG0kU.js";import{I as n,F as a}from"./CommandsAndQueries-ByQHAThU.js";import{M as s,C as m}from"./blocks-DrNhXH8Y.js";import"./Tag-WBOqYu0X.js";import{M as p}from"./index-B20WCXLG.js";import"./copy-08ilKZ0c.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-Bb5ta9Ng.js";import"./preload-helper-PPVm8Dsz.js";import"./index-8yUpcOxv.js";import"./index-y2DJOFuG.js";import"./index-C2Yky6-6.js";import"./Link-DX54TCdQ.js";import"./index-C0jaTjnN.js";import"./index-BkgEbRU4.js";import"./index-DJ81LlKI.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-7LYDV0x0.js";import"./addCustomCSSWithScoping-DIYkZsvP.js";import"./index-COPBcnoz.js";import"./information-tN-lRIsU.js";import"./sys-enter-2-eFq8QnH9.js";import"./alert-DCLbzn71.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-CKK8YXuW.js";import"./delete-D4zm_h0p.js";import"./settings-MyF3qJVm.js";import"./NoData-ljFJXsUq.js";import"./IllustratedMessage-CqwMvOWG.js";import"./i18n-defaults-DGnw9SAb.js";import"./parameters-bundle.css-C9hTgWv9.js";import"./NoFilterResults-BKp3AX8w.js";import"./index-D9LX0obP.js";import"./index-0fiPvY1b.js";import"./slim-arrow-down-Cz12efI2.js";import"./Input-n_T7UVDU.js";import"./ResponsivePopoverCommon.css-C1nFDre3.js";import"./ValueStateMessage.css-DknAZyiZ.js";import"./Suggestions.css-CltqZkwX.js";import"./ListBoxItemGroupTemplate-C7tSoEtb.js";import"./ComboBoxItemGroup-BKPF_atD.js";import"./ListItemBaseTemplate-F0fB9wHg.js";import"./Token-DEhWs7Mh.js";import"./ScrollEnablement--8rTw7W_.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-Cju6LXlU.js";import"./ToggleButton-zDuc9RuQ.js";import"./SuggestionItem-QE9DA7xp.js";import"./index-BDP3hZHD.js";import"./Option-7PVSujFd.js";import"./index-L1FHo7Pk.js";import"./SegmentedButton-vjq3bmSv.js";import"./index-Cy9D_6lg.js";import"./Select-DeEFCAk3.js";import"./InvisibleMessage-1Hg6cN3L.js";import"./slim-arrow-down-Ci1RQCXj.js";import"./index-CKMaXFVW.js";import"./index-MHLsz4iU.js";import"./index-DvDvcTBA.js";import"./IconDesign-DXd8PPVF.js";import"./filter-B9g-vpCv.js";import"./group-2-CohTd7MD.js";import"./sort-descending-CEdiQwd1.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-COGP4GHg.js";import"./utils-4syTV-OB.js";import"./index-CZYJmP3L.js";import"./index-2lxrn3Jb.js";import"./index-D5AoDYXK.js";import"./navigation-down-arrow-DFV_iHIE.js";import"./navigation-right-arrow-vs1LV1Nl.js";import"./navigation-right-arrow-6AlcfDn3.js";import"./useCurrentTheme-ibuaoMhS.js";import"./IndicationColor-DVw-fSM_.js";import"./index-4MBDlEsO.js";import"./debounce-D7W5PopO.js";import"./useIsRTL-7T1wmeJR.js";import"./paper-plane-Dpb_fZ67.js";import"./index-Dqpgkjkr.js";import"./less-B2jLQw2j.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function Be(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{Be as default};
