import{j as e}from"./iframe-Do6vb0_F.js";import{useMDXComponents as r}from"./index-CjAG28Zi.js";import{I as n,F as a}from"./CommandsAndQueries-DNVLBibD.js";import{M as s,C as m}from"./blocks-BSmhBV8W.js";import"./Tag-Bm_1Oa-G.js";import{M as p}from"./index-DFaXcVzr.js";import"./copy-CtSFAv-a.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-9e-ZuUVx.js";import"./preload-helper-PPVm8Dsz.js";import"./index-Bn7jdYPg.js";import"./index-CjAZJ6mP.js";import"./index-CRpB2mc_.js";import"./Link-DfSClIn0.js";import"./index-B7DmSRaZ.js";import"./index-euaiQ6-T.js";import"./index-BKzdQw4A.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-x3ovOdYp.js";import"./addCustomCSSWithScoping-DMyk9VX6.js";import"./index-CziNROS9.js";import"./information-kf1Y_V0y.js";import"./sys-enter-2-Dgg9scSJ.js";import"./alert-eluNIvxZ.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-5e1o-EBG.js";import"./delete-EOOd17FY.js";import"./settings-ChvCVI1H.js";import"./NoData-x4jRmZPJ.js";import"./IllustratedMessage-BpFZWdgz.js";import"./i18n-defaults-DGnw9SAb.js";import"./parameters-bundle.css-C9hTgWv9.js";import"./NoFilterResults-BSP9fDKJ.js";import"./index-TJOhQ-wF.js";import"./index-D-PQMfR1.js";import"./slim-arrow-down-BFUSO5fa.js";import"./Input-CV4am0mg.js";import"./ResponsivePopoverCommon.css-DZxesZgF.js";import"./ValueStateMessage.css-CBDkTR1J.js";import"./Suggestions.css-C6WB3Qk2.js";import"./ListBoxItemGroupTemplate-lrzGyG5S.js";import"./ComboBoxItemGroup-13V5PpfS.js";import"./ListItemBaseTemplate-9NOhdDod.js";import"./Token-DU3vF1l0.js";import"./ScrollEnablement-Bcn9GtV2.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-Dz67dIqH.js";import"./ToggleButton-BRQRWz_K.js";import"./SuggestionItem-VOxlPlC0.js";import"./index-CRXuNHmI.js";import"./Option-CnEC2BV1.js";import"./index-DVIhR92p.js";import"./SegmentedButton-BQrBf1Xa.js";import"./index-U1Yn6qoO.js";import"./Select-CSgqeQI7.js";import"./InvisibleMessage-BMJss_kZ.js";import"./slim-arrow-down-DdXU4zZn.js";import"./index-ChvQYVHX.js";import"./index-D9aj3XtS.js";import"./index-0fgUCGZZ.js";import"./IconDesign-DXd8PPVF.js";import"./filter-DAByxNhp.js";import"./group-2-V4ylj1S-.js";import"./sort-descending-CJeT2CSo.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-Bgdpa9Y6.js";import"./utils-CurRq_4A.js";import"./index-iowTYD53.js";import"./index-D7kd4dZQ.js";import"./index-DvB6BGuZ.js";import"./navigation-down-arrow-DUd4G2g_.js";import"./navigation-right-arrow-DMiO4jal.js";import"./navigation-right-arrow-B2BIXtfp.js";import"./useCurrentTheme-BKmE0cN8.js";import"./IndicationColor-DVw-fSM_.js";import"./index-QvDENoWT.js";import"./debounce-D7W5PopO.js";import"./useIsRTL-BQccTeWy.js";import"./paper-plane-BnCgZ8Rr.js";import"./index-DmyLDLIV.js";import"./less-DarnrJ7s.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function Be(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{Be as default};
