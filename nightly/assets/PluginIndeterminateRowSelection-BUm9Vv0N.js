import{j as e}from"./iframe-lqcNyI1T.js";import{useMDXComponents as r}from"./index-B0DX3imF.js";import{I as n,F as a}from"./CommandsAndQueries-DzJmAZem.js";import{M as s,C as m}from"./blocks-BpHyZEcb.js";import"./Tag-gBw-lmpH.js";import{M as p}from"./index-CZPzb4BW.js";import"./copy-CC4Y44ID.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-4PBPCegN.js";import"./preload-helper-PPVm8Dsz.js";import"./index-Dd_PfWwN.js";import"./index-DgG0lX0j.js";import"./index-D-4WJNaw.js";import"./Link-1aRA3aDD.js";import"./index-DHQLUBCy.js";import"./index-B4-GBSDE.js";import"./index-CiJkSLrj.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-D20vcD6H.js";import"./addCustomCSSWithScoping-CSRUaJeQ.js";import"./index-BwE7J1MZ.js";import"./information-04kgllMP.js";import"./sys-enter-2-DUAlyrLn.js";import"./alert-BKOHJXpG.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-C23xYIkD.js";import"./delete-BW14U-oh.js";import"./settings-C_Arqzcj.js";import"./NoData-BWB1BeqC.js";import"./IllustratedMessage-mqMlzviO.js";import"./i18n-defaults-BS8OTJAB.js";import"./parameters-bundle.css-MDhRcvbE.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-ClaLYbCr.js";import"./index-CrdqdyqA.js";import"./slim-arrow-down-BdAy8DJu.js";import"./Input-BosrlKUD.js";import"./ResponsivePopoverCommon.css-rVzp8R0x.js";import"./ValueStateMessage.css-DgSFjqSc.js";import"./Suggestions.css-CwUuZGb0.js";import"./ListBoxItemGroupTemplate-CFQN3b19.js";import"./ComboBoxItemGroup-vbV7jSGm.js";import"./ListItemBaseTemplate-9qWHR6_L.js";import"./Token-C1zBJwar.js";import"./ScrollEnablement-BXvjXYp4.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-DubsfjRL.js";import"./ToggleButton-BdlhECZc.js";import"./SuggestionItem-C3flXLvO.js";import"./index-DEefWD7h.js";import"./Option-B2iZldHA.js";import"./index-DbQw4X54.js";import"./SegmentedButton-I26Ed474.js";import"./index-Dvv9BM37.js";import"./Select-hm_HJkmj.js";import"./InvisibleMessage-DZjX4vEQ.js";import"./slim-arrow-down-D04fAz1I.js";import"./index-CAnVov9v.js";import"./IconDesign-DXd8PPVF.js";import"./filter-bcHOcALN.js";import"./group-2-C-sqScKq.js";import"./sort-descending-CIWa4L55.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-DLalqhgy.js";import"./utils-BDJXQz-M.js";import"./index-6hZ21krh.js";import"./index-Csa8MFf6.js";import"./index-C7HMOshY.js";import"./navigation-down-arrow-BIjWvyvQ.js";import"./navigation-right-arrow-Ds7jKwyc.js";import"./navigation-right-arrow-rMJaXdAW.js";import"./useCurrentTheme-JW54ydGk.js";import"./IndicationColor-DVw-fSM_.js";import"./index-BTa33zaZ.js";import"./debounce-D7W5PopO.js";import"./useIsRTL-Cjl42E3c.js";import"./paper-plane-34M37_jm.js";import"./index-D6UWP29d.js";import"./less-TeO93Nja.js";import"./index-B8H-Ih5E.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function _e(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{_e as default};
